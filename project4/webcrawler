#!/usr/bin/python -u

import sys
import socket
import json
#import parseurl
#import html
#import html.parser
#import xml

def parseResponse(message):
  d = {}
  m = message.split('\n\n')
  firstPart = m[0].split('\n')
  nextPart = '\n\n'.join(m[1:])
  
  d["statusCode"] = firstPart[0].split(' ')[1]
  d['headers'] = {}
  for line in firstPart[1:]:
    parts = line.split(': ')
    d['headers'][parts[0]] = parts[1]

  d['data'] = nextPart
  print(json.dumps(d))
  return d

def login(sock):
  requestUrl = 'http://fring.ccs.neu.edu/accounts/login/?next=/fakebook/'
  r = "GET /accounts/login/?next=/fakebook/ HTTP/1.0 \n" + "Host: fring.ccs.neu.edu\n\n"
  sock.sendall(r)
  rawMes = receiveMessage(sock)
  mes = parseResponse(rawMes)
  
  switch(mes["statusCode"]):
    case "200":
      print("good 200")
      break
    default:
      print('error')
      print(rawMes)


def receiveMessage(sock):
  mes = ''
  while 1:
    data = sock.recv(4096)
    mes += data
    # if last received character was a newline, we're done receiving the message
    if data[-1] == '\n':
      #print('# received message')
      break
  #print(mes)
  return mes

def main():
  # Create a TCP/IP socket
  sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

  hostname = 'fring.ccs.neu.edu'
  port = 27993

  # get remote ip
  #remote_ip = socket.gethostbyname(hostname)
  #print('# Connecting to server, ' + hostname + ' (' + remote_ip + ')')
  
  # set the socket timeout and connect
  sock.settimeout(5)
  sock.connect((hostname, port))

  # print("# Connected")
  login(sock)


if __name__ == "__main__":
  main()
